# coding: utf-8

"""
    Cokomo Public Api

    Public API Documentation for Cokomo system

    The version of the OpenAPI document: v1
    Contact: cokomo-team@haw-hamburg.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cokomo.models.neighbour import Neighbour  # noqa: E501

class TestNeighbour(unittest.TestCase):
    """Neighbour unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Neighbour:
        """Test Neighbour
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Neighbour`
        """
        model = Neighbour()  # noqa: E501
        if include_optional:
            return Neighbour(
                id = '',
                title = '',
                short_description = '',
                type = '',
                relation = cokomo.models.neighbour_edge.NeighbourEdge(
                    id = '', 
                    type = '', 
                    direction = '', ),
                neighbours = [
                    cokomo.models.neighbour.Neighbour(
                        id = '', 
                        title = '', 
                        short_description = '', 
                        type = '', 
                        relation = cokomo.models.neighbour_edge.NeighbourEdge(
                            id = '', 
                            type = '', 
                            direction = '', ), 
                        neighbours = [
                            cokomo.models.neighbour.Neighbour(
                                id = '', 
                                title = '', 
                                short_description = '', 
                                type = '', )
                            ], )
                    ]
            )
        else:
            return Neighbour(
        )
        """

    def testNeighbour(self):
        """Test Neighbour"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
