# coding: utf-8

"""
    Cokomo Public Api

    Public API Documentation for Cokomo system

    The version of the OpenAPI document: v1
    Contact: cokomo-team@haw-hamburg.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cokomo.models.metamodel import Metamodel  # noqa: E501

class TestMetamodel(unittest.TestCase):
    """Metamodel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Metamodel:
        """Test Metamodel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Metamodel`
        """
        model = Metamodel()  # noqa: E501
        if include_optional:
            return Metamodel(
                competence_base_types = [
                    cokomo.models.competence_base_type.CompetenceBaseType(
                        id = '', 
                        abbreviation = '', 
                        title = '', 
                        description = '', )
                    ],
                edge_types = [
                    cokomo.models.edge_type.EdgeType(
                        id = '', 
                        title = '', 
                        abbreviation = '', 
                        description = '', )
                    ]
            )
        else:
            return Metamodel(
        )
        """

    def testMetamodel(self):
        """Test Metamodel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
